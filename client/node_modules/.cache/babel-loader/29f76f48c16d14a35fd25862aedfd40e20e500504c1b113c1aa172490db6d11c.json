{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Divay Sharma\\\\Coding\\\\sudoku-game-main\\\\client\\\\src\\\\Sudoku.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useState, useRef } from \"react\";\nimport Board from \"./ui/Board\";\nimport Interface from \"./ui/Interface\";\nimport { REST } from \"./services/api.js\";\nimport { useCallback, useEffect } from \"react\";\nimport * as utils from \"./utility/Utils.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Sudoku() {\n  _s();\n  const [grid, setGrid] = useState(utils.getGrid());\n  const [gridInfo, setGridInfo] = useState(utils.getGridInfo());\n  const [puzzleStatus, setPuzzleStatus] = useState(\"** UNSOLVED **\");\n  const initialGrid = useRef(utils.getGrid());\n  const [isCtrlSelect, setIsCtrlSelect] = useState(false);\n  const [isDragSelect, setIsDragSelect] = useState(false);\n  let [mouseDownloc, setMouseDownLoc] = useState(new Set());\n  const [currentArrowPosition, setCurrentArrowPosition] = useState(null);\n  function handleChange(row, col, e, changeType) {\n    switch (changeType) {\n      case \"KeyDown\":\n        if (!isNaN(e.key) && e.key !== \" \") {\n          const newGrid = [...grid];\n          utils.resetSelected(2, gridInfo);\n\n          // false means if all the values selected are same as the key num\n          let missingNumInSelected = false;\n          for (const loc of mouseDownloc) {\n            let row = Number(loc[0]);\n            let col = Number(loc[1]);\n            if (initialGrid.current[row][col] === 0 && newGrid[row][col] !== Number(e.key)) {\n              missingNumInSelected = true;\n            }\n          }\n          console.log(\"c\", mouseDownloc);\n          for (const loc of mouseDownloc) {\n            let row = Number(loc[0]);\n            let col = Number(loc[1]);\n            if (initialGrid.current[row][col] === 0) {\n              if (missingNumInSelected) {\n                newGrid[row][col] = Number(e.key);\n              } else {\n                newGrid[row][col] = 0;\n              }\n              setGrid(newGrid);\n              for (let i = 0; i < 9; i++) {\n                for (let j = 0; j < 9; j++) {\n                  if (newGrid[i][j] === Number(e.key)) {\n                    let element = document.getElementById(i + \" \" + j);\n                    if (!utils.checkCurrentPoisition(i, j, grid)) {\n                      element.className = utils.addCSSClass(element.className, \"incorrect-value\");\n                    } else {\n                      element.className = utils.removeCSSClass(element.className, \"incorrect-value\");\n                    }\n                  }\n                }\n              }\n            }\n          }\n          if (missingNumInSelected) {\n            utils.highlightNumbers(Number(e.key), newGrid, initialGrid.current, gridInfo);\n            setGridInfo(gridInfo);\n          }\n        } else if (e.key === \"Backspace\") {\n          utils.resetSelected(0, gridInfo);\n          const newGrid = [...grid];\n          for (const loc of mouseDownloc) {\n            let row = Number(loc[0]);\n            let col = Number(loc[1]);\n            if (initialGrid.current[row][col] === 0) {\n              let removeNum = newGrid[row][col];\n              newGrid[row][col] = 0;\n              for (let i = 0; i < 9; i++) {\n                for (let j = 0; j < 9; j++) {\n                  if (grid[i][j] === removeNum) {\n                    let element = document.getElementById(i + \" \" + j);\n                    if (!utils.checkCurrentPoisition(i, j, grid)) {\n                      element.className = utils.addCSSClass(element.className, \"incorrect-value\");\n                    } else {\n                      element.className = utils.removeCSSClass(element.className, \"incorrect-value\");\n                    }\n                  }\n                }\n              }\n            }\n          }\n          setGrid(newGrid);\n        }\n        break;\n      case \"MouseEnter\":\n        // console.log(gridInfo[row][col]);\n        // console.log(e.target.className);\n        if (isDragSelect) {\n          utils.resetSelected(2, gridInfo);\n          e.target.className = utils.addCSSClass(e.target.className, \"selected\");\n          gridInfo[row][col] = 1;\n          mouseDownloc.add(String(row) + String(col));\n          setMouseDownLoc(mouseDownloc);\n          setGridInfo(gridInfo);\n        }\n        break;\n      case \"MouseDown\":\n        if (gridInfo[row][col] !== 1) {\n          setIsDragSelect(true);\n          if (!isCtrlSelect) {\n            mouseDownloc = new Set();\n            utils.resetSelected(0, gridInfo);\n            utils.highlightblocks(row, col, gridInfo);\n          }\n          mouseDownloc.add(String(row) + String(col));\n          setMouseDownLoc(mouseDownloc);\n          e.target.className = utils.addCSSClass(e.target.className, \"selected\");\n          gridInfo[row][col] = 1;\n          if (grid[row][col] !== 0) {\n            utils.highlightNumbers(grid[row][col], grid, initialGrid.current, gridInfo);\n          }\n          setGridInfo(gridInfo);\n        } else {\n          utils.resetSelected(0, gridInfo);\n          setMouseDownLoc(new Set());\n        }\n        break;\n      case \"MouseUp\":\n        setIsDragSelect(false);\n        for (let i = 0; i < 9; i++) {\n          for (let j = 0; j < 9; j++) {\n            let element = document.getElementById(i + \" \" + j);\n            if (gridInfo[i][j] === 3) {\n              element.className = utils.addCSSClass(element.className, \"light-light-selected\");\n            }\n          }\n        }\n        break;\n      default:\n        break;\n    }\n  }\n  function handleKeyChange(row, col, element) {\n    if (!isCtrlSelect) {\n      utils.resetSelected(0, gridInfo);\n      mouseDownloc = new Set();\n    }\n    element.className = utils.addCSSClass(element.className, \"selected\");\n    gridInfo[row][col] = 1;\n    if (grid[row][col] !== 0) {\n      utils.highlightNumbers(grid[row][col], grid, initialGrid.current, gridInfo);\n    }\n    utils.highlightblocks(row, col, gridInfo);\n    mouseDownloc.add(String(row) + String(col));\n    setMouseDownLoc(mouseDownloc);\n  }\n  async function handleInterface(action) {\n    let newGrid;\n    switch (action) {\n      case \"create\":\n        newGrid = await handleCreate();\n        utils.copy2DArray(newGrid, initialGrid.current);\n        setPuzzleStatus(\"\");\n        utils.resetSelected(0, gridInfo);\n        setGrid(newGrid);\n        break;\n      case \"solve\":\n        newGrid = await handleSolve();\n        setGrid(newGrid);\n        break;\n      case \"clear\":\n        newGrid = utils.getGrid();\n        utils.copy2DArray(newGrid, initialGrid.current);\n        setGrid(newGrid);\n        utils.resetSelected(0, gridInfo);\n        setPuzzleStatus(\"\");\n        break;\n      case \"validate\":\n        const status = await handleValidate();\n        const puzzStats = status ? \"** SOLVED **\" : \"** UNSOLVED **\";\n        setPuzzleStatus(puzzStats);\n        break;\n      default:\n        throw new Error(\"Invalid action\");\n    }\n  }\n  async function handleCreate() {\n    try {\n      const response = await REST.getBoard();\n      const data = await response.json();\n      return data.game;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async function handleValidate() {\n    try {\n      const response = await REST.validateBoard(grid);\n      const data = await response.json();\n      return data.status;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async function handleSolve() {\n    try {\n      const response = await REST.solveBoard(grid);\n      const data = await response.json();\n      if (data.status) {\n        setPuzzleStatus(\"** SOLVED **\");\n        return data.solution;\n      } else {\n        setPuzzleStatus(\"** UNSOLVABLE **\");\n        return grid;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  const handleKeyPress = useCallback(event => {\n    if (event.key === \" \") {\n      utils.resetSelected(0, gridInfo);\n      setMouseDownLoc(new Set());\n    } else if (event.key === \"Control\") {\n      utils.resetSelected(2, gridInfo);\n      setIsCtrlSelect(true);\n    } else if (event.key === \"ArrowRight\" || event.key === \"ArrowUp\" || event.key === \"ArrowLeft\" || event.key === \"ArrowDown\") {\n      let x = 0;\n      let y = 0;\n      if (currentArrowPosition !== null) {\n        x = currentArrowPosition[0];\n        y = currentArrowPosition[1];\n        if (event.key === \"ArrowRight\" && y < 8) y++;\n        if (event.key === \"ArrowUp\" && x > 0) x--;\n        if (event.key === \"ArrowLeft\" && y > 0) y--;\n        if (event.key === \"ArrowDown\" && x < 8) x++;\n      }\n      setCurrentArrowPosition([x, y]);\n      let element = document.getElementById(x + \" \" + y);\n      handleKeyChange(x, y, element);\n    }\n  }, [handleKeyChange, currentArrowPosition, gridInfo]);\n  const handleKeyPressUp = useCallback(event => {\n    if (event.key === \"Control\") {\n      setIsCtrlSelect(false);\n    }\n  }, []);\n  useEffect(() => {\n    // attach the event listener\n    document.addEventListener('keydown', handleKeyPress);\n    document.addEventListener('keyup', handleKeyPressUp);\n    // document.addEventListener(\"mousedown\", handleKeyPress);\n\n    // remove the event listener\n    return () => {\n      document.removeEventListener('keydown', handleKeyPress);\n      document.addEventListener('keyup', handleKeyPressUp);\n      // document.addEventListener(\"mousedown\", handleKeyPress);\n    };\n  }, [handleKeyPress, handleKeyPressUp]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Sudoku\",\n    children: [/*#__PURE__*/_jsxDEV(Board, {\n      puzzle: initialGrid.current,\n      grid: grid,\n      gridInfo: gridInfo,\n      handleChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Interface, {\n      handleInterface: handleInterface,\n      status: puzzleStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Setting\",\n      children: \"Setting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Side-margin-left\",\n      children: \"Side-margin-left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Side-margin-right\",\n      children: \"Side-margin-right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Footer\",\n      children: \"Footer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 5\n  }, this);\n}\n_s(Sudoku, \"da4s87BmQyWfhcf8+mrGulVbuI0=\");\n_c = Sudoku;\nexport default Sudoku;\nvar _c;\n$RefreshReg$(_c, \"Sudoku\");","map":{"version":3,"names":["React","useState","useRef","Board","Interface","REST","useCallback","useEffect","utils","jsxDEV","_jsxDEV","Sudoku","_s","grid","setGrid","getGrid","gridInfo","setGridInfo","getGridInfo","puzzleStatus","setPuzzleStatus","initialGrid","isCtrlSelect","setIsCtrlSelect","isDragSelect","setIsDragSelect","mouseDownloc","setMouseDownLoc","Set","currentArrowPosition","setCurrentArrowPosition","handleChange","row","col","e","changeType","isNaN","key","newGrid","resetSelected","missingNumInSelected","loc","Number","current","console","log","i","j","element","document","getElementById","checkCurrentPoisition","className","addCSSClass","removeCSSClass","highlightNumbers","removeNum","target","add","String","highlightblocks","handleKeyChange","handleInterface","action","handleCreate","copy2DArray","handleSolve","status","handleValidate","puzzStats","Error","response","getBoard","data","json","game","error","validateBoard","solveBoard","solution","handleKeyPress","event","x","y","handleKeyPressUp","addEventListener","removeEventListener","children","puzzle","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Divay Sharma/Coding/sudoku-game-main/client/src/Sudoku.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useState, useRef } from \"react\";\nimport Board from \"./ui/Board\";\nimport Interface from \"./ui/Interface\";\nimport { REST } from \"./services/api.js\";\nimport { useCallback, useEffect } from \"react\";\nimport * as utils from \"./utility/Utils.js\";\n\nfunction Sudoku() {\n  const [grid, setGrid] = useState(utils.getGrid());\n  const [gridInfo, setGridInfo] = useState(utils.getGridInfo());\n  const [puzzleStatus, setPuzzleStatus] = useState(\"** UNSOLVED **\");\n  const initialGrid = useRef(utils.getGrid());\n\n  const [isCtrlSelect, setIsCtrlSelect] = useState(false);\n  const [isDragSelect, setIsDragSelect] = useState(false);\n  let [mouseDownloc, setMouseDownLoc] = useState(new Set());\n  const [currentArrowPosition, setCurrentArrowPosition] = useState(null);\n\n  function handleChange(row, col, e, changeType) {\n    switch (changeType) {\n      case \"KeyDown\":\n        if (!isNaN(e.key) && e.key !== \" \") {\n          const newGrid = [...grid];\n          utils.resetSelected(2, gridInfo);\n\n          // false means if all the values selected are same as the key num\n          let missingNumInSelected = false;\n          for (const loc of mouseDownloc) {\n            let row = Number(loc[0]);\n            let col = Number(loc[1]);\n            if (initialGrid.current[row][col] === 0 && newGrid[row][col] !== Number(e.key)) {\n              missingNumInSelected = true;\n            }\n          }\n          console.log(\"c\", mouseDownloc);\n          for (const loc of mouseDownloc) {\n            let row = Number(loc[0]);\n            let col = Number(loc[1]);\n            if (initialGrid.current[row][col] === 0) {\n              if (missingNumInSelected) {\n                newGrid[row][col] = Number(e.key);\n              } else {\n                newGrid[row][col] = 0;\n              }\n              setGrid(newGrid);\n\n              for (let i = 0; i < 9; i++) {\n                for (let j = 0; j < 9; j++) {\n                  if (newGrid[i][j] === Number(e.key)) {\n                    let element = document.getElementById(i + \" \" + j);\n                    if (!utils.checkCurrentPoisition(i, j, grid)) {\n                      element.className = utils.addCSSClass(element.className, \"incorrect-value\");\n                    } else {\n                      element.className = utils.removeCSSClass(element.className, \"incorrect-value\");\n                    }\n                  }\n                }\n              }\n            }\n          }\n\n          if (missingNumInSelected) {\n            utils.highlightNumbers(Number(e.key), newGrid, initialGrid.current, gridInfo);\n            setGridInfo(gridInfo);\n          }\n        } else if (e.key === \"Backspace\") {\n          utils.resetSelected(0, gridInfo);\n          const newGrid = [...grid];\n          for (const loc of mouseDownloc) {\n            let row = Number(loc[0]);\n            let col = Number(loc[1]);\n\n            if (initialGrid.current[row][col] === 0) {\n              let removeNum = newGrid[row][col];\n              newGrid[row][col] = 0;\n              for (let i = 0; i < 9; i++) {\n                for (let j = 0; j < 9; j++) {\n                  if (grid[i][j] === removeNum) {\n                    let element = document.getElementById(i + \" \" + j);\n                    if (!utils.checkCurrentPoisition(i, j, grid)) {\n                      element.className = utils.addCSSClass(element.className, \"incorrect-value\");\n                    } else {\n                      element.className = utils.removeCSSClass(element.className, \"incorrect-value\");\n                    }\n                  }\n                }\n              }\n            }\n          }\n          setGrid(newGrid);\n        }\n        break;\n\n      case \"MouseEnter\":\n        // console.log(gridInfo[row][col]);\n        // console.log(e.target.className);\n        if (isDragSelect) {\n          utils.resetSelected(2, gridInfo);\n          e.target.className = utils.addCSSClass(e.target.className, \"selected\");\n          gridInfo[row][col] = 1;\n          mouseDownloc.add(String(row) + String(col));\n          setMouseDownLoc(mouseDownloc);\n          setGridInfo(gridInfo);\n        }\n        break;\n\n      case \"MouseDown\":\n        if (gridInfo[row][col] !== 1) {\n          setIsDragSelect(true);\n          if (!isCtrlSelect) {\n            mouseDownloc = new Set();\n            utils.resetSelected(0, gridInfo);\n            utils.highlightblocks(row, col, gridInfo);\n          }\n          mouseDownloc.add(String(row) + String(col));\n          setMouseDownLoc(mouseDownloc);\n\n          e.target.className = utils.addCSSClass(e.target.className, \"selected\");\n          gridInfo[row][col] = 1;\n\n          if (grid[row][col] !== 0) {\n            utils.highlightNumbers(grid[row][col], grid, initialGrid.current, gridInfo);\n          }\n          setGridInfo(gridInfo);\n        } else {\n          utils.resetSelected(0, gridInfo);\n          setMouseDownLoc(new Set());\n        }\n        break;\n\n      case \"MouseUp\":\n        setIsDragSelect(false);\n        for (let i = 0; i < 9; i++) {\n          for (let j = 0; j < 9; j++) {\n            let element = document.getElementById(i + \" \" + j);\n            if (gridInfo[i][j] === 3) {\n              element.className = utils.addCSSClass(element.className, \"light-light-selected\");\n            }\n          }\n        }\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  function handleKeyChange(row, col, element) {\n    if (!isCtrlSelect) {\n      utils.resetSelected(0, gridInfo);\n      mouseDownloc = new Set();\n    }\n    element.className = utils.addCSSClass(element.className, \"selected\");\n    gridInfo[row][col] = 1;\n    if (grid[row][col] !== 0) {\n      utils.highlightNumbers(grid[row][col], grid, initialGrid.current, gridInfo);\n    }\n    utils.highlightblocks(row, col, gridInfo);\n    mouseDownloc.add(String(row) + String(col));\n    setMouseDownLoc(mouseDownloc);\n  }\n\n  async function handleInterface(action) {\n    let newGrid;\n    switch (action) {\n      case \"create\":\n        newGrid = await handleCreate();\n        utils.copy2DArray(newGrid, initialGrid.current);\n        setPuzzleStatus(\"\");\n        utils.resetSelected(0, gridInfo);\n        setGrid(newGrid);\n        break;\n      case \"solve\":\n        newGrid = await handleSolve();\n        setGrid(newGrid);\n        break;\n      case \"clear\":\n        newGrid = utils.getGrid();\n        utils.copy2DArray(newGrid, initialGrid.current);\n        setGrid(newGrid);\n        utils.resetSelected(0, gridInfo);\n        setPuzzleStatus(\"\");\n        break;\n      case \"validate\":\n        const status = await handleValidate();\n        const puzzStats = status ? \"** SOLVED **\" : \"** UNSOLVED **\";\n        setPuzzleStatus(puzzStats);\n        break;\n      default:\n        throw new Error(\"Invalid action\");\n    }\n  }\n\n  async function handleCreate() {\n    try {\n      const response = await REST.getBoard();\n      const data = await response.json();\n      return data.game;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function handleValidate() {\n    try {\n      const response = await REST.validateBoard(grid);\n      const data = await response.json();\n      return data.status;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function handleSolve() {\n    try {\n      const response = await REST.solveBoard(grid);\n      const data = await response.json();\n      if (data.status) {\n        setPuzzleStatus(\"** SOLVED **\");\n        return data.solution;\n      } else {\n        setPuzzleStatus(\"** UNSOLVABLE **\");\n        return grid;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const handleKeyPress = useCallback((event) => {\n    if (event.key === \" \") {\n      utils.resetSelected(0, gridInfo);\n      setMouseDownLoc(new Set());\n    } else if (event.key === \"Control\") {\n      utils.resetSelected(2, gridInfo);\n      setIsCtrlSelect(true);\n    } else if (event.key === \"ArrowRight\" || event.key === \"ArrowUp\" || event.key === \"ArrowLeft\" || event.key === \"ArrowDown\") {\n      let x = 0;\n      let y = 0;\n      if (currentArrowPosition !== null) {\n        x = currentArrowPosition[0];\n        y = currentArrowPosition[1];\n        if (event.key === \"ArrowRight\" && y < 8) y++;\n        if (event.key === \"ArrowUp\" && x > 0) x--;\n        if (event.key === \"ArrowLeft\" && y > 0) y--;\n        if (event.key === \"ArrowDown\" && x < 8) x++;\n      }\n      setCurrentArrowPosition([x, y]);\n      let element = document.getElementById(x + \" \" + y);\n      handleKeyChange(x, y, element);\n    }\n  }, [handleKeyChange, currentArrowPosition, gridInfo]);\n\n  const handleKeyPressUp = useCallback((event) => {\n    if (event.key === \"Control\") {\n      setIsCtrlSelect(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    // attach the event listener\n    document.addEventListener('keydown', handleKeyPress);\n    document.addEventListener('keyup', handleKeyPressUp);\n    // document.addEventListener(\"mousedown\", handleKeyPress);\n\n    // remove the event listener\n    return () => {\n      document.removeEventListener('keydown', handleKeyPress);\n      document.addEventListener('keyup', handleKeyPressUp);\n      // document.addEventListener(\"mousedown\", handleKeyPress);\n    };\n  }, [handleKeyPress, handleKeyPressUp]);\n\n  return (\n    <div className=\"Sudoku\">\n\n      <Board\n        puzzle={initialGrid.current}\n        grid={grid}\n        gridInfo={gridInfo}\n        handleChange={handleChange}\n      />\n      <Interface handleInterface={handleInterface} status={puzzleStatus} />\n      <div className=\"Setting\">Setting</div>\n      <div className=\"Side-margin-left\">Side-margin-left</div>\n      <div className=\"Side-margin-right\">Side-margin-right</div>\n      <div className=\"Footer\">Footer</div>\n      {/* <Numpad>\n\n        </Numpad>\n        <Board\n          puzzle={initialGrid.current}\n          grid={grid}\n          gridInfo={utils.gridInfo}\n          handleChange={handleChange}\n        />\n        <Interface handleInterface={handleInterface} status={puzzleStatus} /> */}\n\n    </div>\n  );\n}\n\nexport default Sudoku;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}