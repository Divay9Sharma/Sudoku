{"ast":null,"code":"export function getGridInfo() {\n  const gridInfo = [];\n  for (let i = 0; i < 9; i++) {\n    gridInfo[i] = Array(9).fill(0);\n  }\n  return gridInfo;\n}\nexport function getGrid() {\n  const grid = [];\n  for (let i = 0; i < 9; i++) {\n    grid[i] = Array(9).fill(0);\n  }\n  return grid;\n}\nexport function copy2DArray(from, to) {\n  for (let i = 0; i < from.length; i++) {\n    to[i] = [...from[i]];\n  }\n}\nexport function addCSSClass(elementClassName, newClass) {\n  elementClassName = removeCSSClass(elementClassName, newClass);\n  if (newClass === \"light-light-selected\" || newClass === \"light-selected\" || newClass === \"selected\") {\n    elementClassName = removeCSSClass(elementClassName, \"light-light-selected\");\n    elementClassName = removeCSSClass(elementClassName, \"light-selected\");\n    elementClassName = removeCSSClass(elementClassName, \"selected\");\n  }\n  elementClassName += \" \" + newClass;\n  return elementClassName;\n}\nexport function removeCSSClass(elementClassName, classToRemove) {\n  const classArray = elementClassName.split(\" \");\n  let newClassName = \"\";\n  for (const className of classArray) {\n    if (className !== classToRemove) {\n      newClassName += className + \" \";\n    }\n  }\n  return newClassName.slice(0, -1);\n}\n\n// export function findCSSClass(elementClassName, classToFind) {\n//   const classArray = elementClassName.split(\" \");\n//   for (const className of classArray) {\n//     if (className === classToFind) {\n//       return true;\n//     }\n//   }\n//   return false;\n// }\n\n// option = 0     reset all\n// option = n     reset n\n\nexport function resetSelected(option = 0, gridInfo) {\n  // console.log(gridInfo);\n  for (let i = 0; i < 9; i++) {\n    for (let j = 0; j < 9; j++) {\n      let element = document.getElementById(i + \" \" + j);\n      if (gridInfo[i][j] === 1) {\n        if (option === 0 || option === 1) {\n          element.className = removeCSSClass(element.className, \"selected\");\n          gridInfo[i][j] = 0;\n        }\n      }\n      if (gridInfo[i][j] === 2) {\n        if (option === 0 || option === 2) {\n          element.className = removeCSSClass(element.className, \"light-selected\");\n          gridInfo[i][j] = 0;\n        }\n      }\n      if (gridInfo[i][j] === 3) {\n        if (option === 0 || option === 2) {\n          element.className = removeCSSClass(element.className, \"light-light-selected\");\n          gridInfo[i][j] = 0;\n        }\n      }\n    }\n  }\n}\nexport function highlightNumbers(number, grid, initialGrid, gridInfo) {\n  for (let i = 0; i < 9; i++) {\n    for (let j = 0; j < 9; j++) {\n      let element = document.getElementById(i + \" \" + j);\n      // mark all taken tiles which do not have same number\n      if (grid[i][j] !== 0 && grid[i][j] !== number && gridInfo[i][j] !== 1) {\n        element.className = addCSSClass(element.className, \"light-light-selected\");\n        gridInfo[i][j] = 3;\n      }\n      // Mark all tiles which has same number\n      else if (grid[i][j] === number && number !== 0) {\n        if (gridInfo[i][j] !== 1) {\n          element.className = addCSSClass(element.className, \"light-selected\");\n          gridInfo[i][j] = 2;\n        }\n        // Mark all the blocks that they cover\n        highlightblocks(i, j, gridInfo);\n      }\n    }\n  }\n}\nexport function highlightblocks(row, col, gridInfo) {\n  let lightSelect = false;\n  for (let i = 0; i < 9; i++) {\n    for (let j = 0; j < 9; j++) {\n      lightSelect = false;\n      if (gridInfo[i][j] === 0) {\n        if ((i === row && j !== col || i !== row && j === col) && gridInfo[i][j] === 0) {\n          lightSelect = true;\n        }\n        if (i !== row && j !== col && Math.floor(i / 3) === Math.floor(row / 3) && Math.floor(j / 3) === Math.floor(col / 3) && gridInfo[i][j] === 0) {\n          lightSelect = true;\n        }\n        if (lightSelect) {\n          let element = document.getElementById(i + \" \" + j);\n          element.className = addCSSClass(element.className, \"light-light-selected\");\n          gridInfo[i][j] = 3;\n        }\n      }\n    }\n  }\n}\nexport function checkCurrentPoisition(row, col, grid) {\n  for (let i = 0; i < 9; i++) {\n    for (let j = 0; j < 9; j++) {\n      if ((i === row && j !== col || i !== row && j === col) && grid[i][j] === grid[row][col]) {\n        return false;\n      }\n      if (Math.floor(i / 3) === Math.floor(row / 3) && Math.floor(j / 3) === Math.floor(col / 3) && grid[i][j] === grid[row][col] && i !== row) {\n        return false;\n      }\n    }\n  }\n  return true;\n}","map":{"version":3,"names":["getGridInfo","gridInfo","i","Array","fill","getGrid","grid","copy2DArray","from","to","length","addCSSClass","elementClassName","newClass","removeCSSClass","classToRemove","classArray","split","newClassName","className","slice","resetSelected","option","j","element","document","getElementById","highlightNumbers","number","initialGrid","highlightblocks","row","col","lightSelect","Math","floor","checkCurrentPoisition"],"sources":["C:/Users/Divay Sharma/Coding/sudoku-game-main/client/src/utility/Utils.js"],"sourcesContent":["export function getGridInfo() {\r\n  const gridInfo = [];\r\n  for (let i = 0; i < 9; i++) {\r\n    gridInfo[i] = Array(9).fill(0);\r\n  }\r\n  return gridInfo;\r\n}\r\n\r\nexport function getGrid() {\r\n  const grid = [];\r\n  for (let i = 0; i < 9; i++) {\r\n    grid[i] = Array(9).fill(0);\r\n  }\r\n  return grid;\r\n}\r\n\r\nexport function copy2DArray(from, to) {\r\n  for (let i = 0; i < from.length; i++) {\r\n    to[i] = [...from[i]];\r\n  }\r\n}\r\n\r\nexport function addCSSClass(elementClassName, newClass) {\r\n  elementClassName = removeCSSClass(elementClassName, newClass);\r\n  if (newClass === \"light-light-selected\" || newClass === \"light-selected\" || newClass === \"selected\") {\r\n    elementClassName = removeCSSClass(elementClassName, \"light-light-selected\");\r\n    elementClassName = removeCSSClass(elementClassName, \"light-selected\");\r\n    elementClassName = removeCSSClass(elementClassName, \"selected\");\r\n  }\r\n  elementClassName += \" \" + newClass;\r\n  return elementClassName;\r\n}\r\n\r\nexport function removeCSSClass(elementClassName, classToRemove) {\r\n  const classArray = elementClassName.split(\" \");\r\n  let newClassName = \"\";\r\n  for (const className of classArray) {\r\n    if (className !== classToRemove) {\r\n      newClassName += className + \" \";\r\n    }\r\n  }\r\n  return newClassName.slice(0, -1);\r\n}\r\n\r\n// export function findCSSClass(elementClassName, classToFind) {\r\n//   const classArray = elementClassName.split(\" \");\r\n//   for (const className of classArray) {\r\n//     if (className === classToFind) {\r\n//       return true;\r\n//     }\r\n//   }\r\n//   return false;\r\n// }\r\n\r\n// option = 0     reset all\r\n// option = n     reset n\r\n\r\nexport function resetSelected(option = 0, gridInfo) {\r\n  // console.log(gridInfo);\r\n  for (let i = 0; i < 9; i++) {\r\n    for (let j = 0; j < 9; j++) {\r\n      let element = document.getElementById(i + \" \" + j);\r\n      if (gridInfo[i][j] === 1) {\r\n        if (option === 0 || option === 1) {\r\n          element.className = removeCSSClass(element.className, \"selected\");\r\n          gridInfo[i][j] = 0;\r\n        }\r\n      }\r\n      if (gridInfo[i][j] === 2) {\r\n        if (option === 0 || option === 2) {\r\n          element.className = removeCSSClass(element.className, \"light-selected\");\r\n          gridInfo[i][j] = 0;\r\n        }\r\n      }\r\n      if (gridInfo[i][j] === 3) {\r\n        if (option === 0 || option === 2) {\r\n          element.className = removeCSSClass(element.className, \"light-light-selected\");\r\n          gridInfo[i][j] = 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function highlightNumbers(number, grid, initialGrid, gridInfo) {\r\n  for (let i = 0; i < 9; i++) {\r\n    for (let j = 0; j < 9; j++) {\r\n      let element = document.getElementById(i + \" \" + j);\r\n      // mark all taken tiles which do not have same number\r\n      if (grid[i][j] !== 0 && grid[i][j] !== number && gridInfo[i][j] !== 1) {\r\n        element.className = addCSSClass(element.className, \"light-light-selected\");\r\n        gridInfo[i][j] = 3;\r\n      }\r\n      // Mark all tiles which has same number\r\n      else if (grid[i][j] === number && number !== 0) {\r\n        if (gridInfo[i][j] !== 1) {\r\n          element.className = addCSSClass(element.className, \"light-selected\");\r\n          gridInfo[i][j] = 2;\r\n        }\r\n        // Mark all the blocks that they cover\r\n        highlightblocks(i, j, gridInfo);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function highlightblocks(row, col, gridInfo) {\r\n  let lightSelect = false;\r\n  for (let i = 0; i < 9; i++) {\r\n    for (let j = 0; j < 9; j++) {\r\n      lightSelect = false;\r\n      if (gridInfo[i][j] === 0) {\r\n        if (((i === row && j !== col) || (i !== row && j === col)) && gridInfo[i][j] === 0) {\r\n          lightSelect = true;\r\n        }\r\n        if ((i !== row && j !== col) && Math.floor(i / 3) === Math.floor(row / 3) && Math.floor(j / 3) === Math.floor(col / 3) && gridInfo[i][j] === 0) {\r\n          lightSelect = true;\r\n        }\r\n        if (lightSelect) {\r\n          let element = document.getElementById(i + \" \" + j);\r\n          element.className = addCSSClass(element.className, \"light-light-selected\");\r\n          gridInfo[i][j] = 3;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function checkCurrentPoisition(row, col, grid) {\r\n  for (let i = 0; i < 9; i++) {\r\n    for (let j = 0; j < 9; j++) {\r\n      if (((i === row && j !== col) || (i !== row && j === col)) && grid[i][j] === grid[row][col]) {\r\n        return false;\r\n      }\r\n      if (Math.floor(i / 3) === Math.floor(row / 3) && Math.floor(j / 3) === Math.floor(col / 3) && grid[i][j] === grid[row][col] && i !== row) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return true;\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}